{
  "index": "The html file that works as the entry point for the application.",
  "useLocalPkgs": "Sets the project to download all of the dependencies as local sources and generating a 'node_modules' directory that is useful for existing tooling to pick up, however it has no node dependencies.",
  "provider": "Which CDN use to pull your app's dependencies from.",
  "runconfiguration": "Tells to include dev/testing dependencies or run with only the production configuretion.",
  "mountdirectories": "Tells perla that it should expose the directory as a server directory.",
  "plugins": "Tells perla to use this list of perla plugins that will be used to transform content at runtime/devtime.",
  "enableenv": "Tells perla to expose local 'PERLA_' prefixed environment variables in your application.",
  "envpath": "Server path that will serve 'PERLA_' prefixed environment variables if they are enabled via the 'enableEnv' setting.",
  "dependencies": "A list of packages that your app will depend on (like react or lit), that will be pulled from the specified CDN selected in the 'provider' setting.",
  "devdependencies": "A list of packages that your app will depend only at dev or testing (like chai or other asserting libraries), that will be pulled from the specified CDN selected in the 'provider' setting.",
  "fable": "F# specific configurations for the Fable Compiler.",
  "fable.project": "Local relative path to the Fable project's *.fsproj file.",
  "fable.extension": "File Extension set in Fable's output files.",
  "fable.sourcemaps": "Enable Fable source map output.",
  "fable.outdir": "Where to output Fable Compiler's output files.",
  "testing.fable": "F# specific configurations for the Fable Compiler.",
  "testing.fable.project": "Local relative path to the Fable project's *.fsproj file.",
  "testing.fable.extension": "File Extension set in Fable's output files.",
  "testing.fable.sourcemaps": "Enable Fable source map output.",
  "testing.fable.outdir": "Where to output Fable Compiler's output files.",
  "devserver": "Configuration for the Development server for your Javascript Applications.",
  "devserver.port": "Select the port to listen for http requests.",
  "devserver.host": "Select the host to listen for http requests.",
  "devserver.livereload": "Enable or disable reloading on file changes.",
  "devserver.usessl": "enable https support.",
  "devserver.proxy": "A mapping object that can be used to proxy http requests to other servers.",
  "esbuild": "Esbuild configurable options used by perla.",
  "esbuild.esbuildpath": "A local file path to a custom esbuild binary.",
  "esbuild.version": "Sets a specific version of esbuild to be used by this project.",
  "esbuild.ecmaversion": "Javascript version to use as the compiled output.",
  "esbuild.minify": "minify compiled sources.",
  "esbuild.injects": "A list of files that will be read and their contents will be prepended to each of the the output files.",
  "esbuild.externals": "A list of external dependencies, esbuild will not perform anything when these are found in source files.",
  "esbuild.fileloaders": "A mapping object that can be used to set which extensions shoul use which esbuild loaders.",
  "esbuild.jsxautomatic": "Enable for the automatic jsx support in esbuild.",
  "esbuild.jsximportsource": "Set this property to change where the automatix jsx gets imported.",
  "build": "Perla build configuration.",
  "build.includes": "A relative path or glob that indicates file to copy.",
  "build.excludes": "A relative path or glob that indicates file to exclude while copying files.",
  "build.outdir": "Where to output the final sources of the 'perla build' command.",
  "build.emitenvfile": "Copy the 'PERLA_' prefixed environment variables and output them in the final build as a separate file.",
  "testing": "Configuration for the Testing command in perla.",
  "testing.headless": "Runs the selected browsers in no window mode or windowed for testing.",
  "testing.watch": "Enable watch for testing source files.",
  "testing.browsermode": "Run the tests on all of the browsers at the same time or one by one in a sequence.",
  "testing.browsers": "A list of browsers to run tests against (only playwright supported browsers).",
  "testing.excludes": "A list of glob or local paths to exclude files from the execution.",
  "testing.includes": "A list of glob or local paths to include files in the execution."
}
